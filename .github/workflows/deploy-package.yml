# This is a deploy workflow

name: package and deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  package:
    runs-on: maven:3.8.4-openjdk-17

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build with Maven
        run: mvn clean package

  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: maven:3.8.4-openjdk-17

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: deploy
        run: |
              git config --global user.email "${USER_EMAIL}"
              git config --global user.name "${USER_NAME}"
              TAG_NAME="AUTO-COMMIT"
              # Check if the tag exists locally
              if git rev-parse -q --verify "refs/tags/$TAG_NAME" > /dev/null; then
              # Delete the local tag
              git tag -d "$TAG_NAME"
              fi
              # Check if the tag exists on the remote
              if git ls-remote --tags origin "$TAG_NAME" | grep -q "$TAG_NAME"; then
              # Delete the remote tag
              git push origin --delete "$TAG_NAME"
              fi        
              CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
              NEXT_VERSION=$(echo "${CURRENT_VERSION}" | awk -F'.' '{print $1"."$2"."$3 + 1}')
              mvn versions:set -DnewVersion="${NEXT_VERSION}"
              git commit -am "Bump version to ${NEXT_VERSION}"
              git tag -a "AUTO-COMMIT" -m "Bump version to ${NEXT_VERSION}"              
              git push origin development --tags --set-upstream
              mvn deploy --settings ./.github/workflows/settings.xml
